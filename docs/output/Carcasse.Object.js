Ext.data.JsonP.Carcasse_Object({"tagname":"class","name":"Carcasse.Object","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":true,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"author":["Jacky Nguyen <jacky@sencha.com>"],"docauthor":["Jacky Nguyen <jacky@sencha.com>"]},"private":null,"id":"class-Carcasse.Object","members":{"cfg":[],"property":[{"name":"mergeIf","tagname":"property","owner":"Carcasse.Object","meta":{"private":true},"id":"property-mergeIf"}],"method":[{"name":"chain","tagname":"method","owner":"Carcasse.Object","meta":{},"id":"method-chain"},{"name":"classify","tagname":"method","owner":"Carcasse.Object","meta":{"private":true},"id":"method-classify"},{"name":"each","tagname":"method","owner":"Carcasse.Object","meta":{},"id":"method-each"},{"name":"fromQueryString","tagname":"method","owner":"Carcasse.Object","meta":{},"id":"method-fromQueryString"},{"name":"getKey","tagname":"method","owner":"Carcasse.Object","meta":{},"id":"method-getKey"},{"name":"getKeys","tagname":"method","owner":"Carcasse.Object","meta":{},"id":"method-getKeys"},{"name":"getSize","tagname":"method","owner":"Carcasse.Object","meta":{},"id":"method-getSize"},{"name":"getValues","tagname":"method","owner":"Carcasse.Object","meta":{},"id":"method-getValues"},{"name":"merge","tagname":"method","owner":"Carcasse.Object","meta":{},"id":"method-merge"},{"name":"mergeIf","tagname":"method","owner":"Carcasse.Object","meta":{"private":true},"id":"method-mergeIf"},{"name":"toQueryObjects","tagname":"method","owner":"Carcasse.Object","meta":{},"id":"method-toQueryObjects"},{"name":"toQueryString","tagname":"method","owner":"Carcasse.Object","meta":{},"id":"method-toQueryString"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":5,"files":[{"filename":"Object.js","href":"Object.html#Carcasse-Object"}],"html_meta":{"author":null,"docauthor":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Object.html#Carcasse-Object' target='_blank'>Object.js</a></div></pre><div class='doc-contents'><p>A collection of useful static methods to deal with objects.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-mergeIf' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-property-mergeIf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-property-mergeIf' class='name not-expandable'>mergeIf</a><span> : Object</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-chain' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-chain' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-chain' class='name expandable'>chain</a>( <span class='pre'>object</span> )</div><div class='description'><div class='short'>Returns a new object with the given object as the prototype chain. ...</div><div class='long'><p>Returns a new object with the given object as the prototype chain.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>The prototype chain for the new object.</p>\n</div></li></ul></div></div></div><div id='method-classify' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-classify' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-classify' class='name expandable'>classify</a>( <span class='pre'>object</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-each' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-each' class='name expandable'>each</a>( <span class='pre'>object, fn, [scope]</span> )</div><div class='description'><div class='short'>Iterate through an object and invoke the given callback function for each iteration. ...</div><div class='long'><p>Iterate through an object and invoke the given callback function for each iteration. The iteration can be stop\nby returning <code>false</code> in the callback function. For example:</p>\n\n<pre><code>var person = {\n    name: 'Jacky',\n    hairColor: 'black',\n    loves: ['food', 'sleeping', 'wife']\n};\n\n<a href=\"#!/api/Carcasse.Object-method-each\" rel=\"Carcasse.Object-method-each\" class=\"docClass\">Carcasse.Object.each</a>(person, function(key, value, myself) {\n    console.log(key + \":\" + value);\n\n    if (key === 'hairColor') {\n        return false; // stop the iteration\n    }\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>The object to iterate</p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>The callback function.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'></div></li><li><span class='pre'>value</span> : Mixed<div class='sub-desc'></div></li><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>The object itself</p>\n</div></li></ul></div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The execution scope (<code>this</code>) of the callback function</p>\n</div></li></ul></div></div></div><div id='method-fromQueryString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-fromQueryString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-fromQueryString' class='name expandable'>fromQueryString</a>( <span class='pre'>queryString, [recursive]</span> ) : Object</div><div class='description'><div class='short'>Converts a query string back into an object. ...</div><div class='long'><p>Converts a query string back into an object.</p>\n\n<p>Non-recursive:</p>\n\n<pre><code><a href=\"#!/api/Carcasse.Object-method-fromQueryString\" rel=\"Carcasse.Object-method-fromQueryString\" class=\"docClass\">Carcasse.Object.fromQueryString</a>(\"foo=1&amp;bar=2\"); // returns {foo: 1, bar: 2}\n<a href=\"#!/api/Carcasse.Object-method-fromQueryString\" rel=\"Carcasse.Object-method-fromQueryString\" class=\"docClass\">Carcasse.Object.fromQueryString</a>(\"foo=&amp;bar=2\"); // returns {foo: null, bar: 2}\n<a href=\"#!/api/Carcasse.Object-method-fromQueryString\" rel=\"Carcasse.Object-method-fromQueryString\" class=\"docClass\">Carcasse.Object.fromQueryString</a>(\"some%20price=%24300\"); // returns {'some price': '$300'}\n<a href=\"#!/api/Carcasse.Object-method-fromQueryString\" rel=\"Carcasse.Object-method-fromQueryString\" class=\"docClass\">Carcasse.Object.fromQueryString</a>(\"colors=red&amp;colors=green&amp;colors=blue\"); // returns {colors: ['red', 'green', 'blue']}\n</code></pre>\n\n<p>Recursive:</p>\n\n<pre><code><a href=\"#!/api/Carcasse.Object-method-fromQueryString\" rel=\"Carcasse.Object-method-fromQueryString\" class=\"docClass\">Carcasse.Object.fromQueryString</a>(\"username=Jacky&amp;dateOfBirth[day]=1&amp;dateOfBirth[month]=2&amp;dateOfBirth[year]=1911&amp;hobbies[0]=coding&amp;hobbies[1]=eating&amp;hobbies[2]=sleeping&amp;hobbies[3][0]=nested&amp;hobbies[3][1]=stuff\", true);\n\n// returns\n{\n    username: 'Jacky',\n    dateOfBirth: {\n        day: '1',\n        month: '2',\n        year: '1911'\n    },\n    hobbies: ['coding', 'eating', 'sleeping', ['nested', 'stuff']]\n}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>queryString</span> : String<div class='sub-desc'><p>The query string to decode.</p>\n</div></li><li><span class='pre'>recursive</span> : Boolean (optional)<div class='sub-desc'><p>Whether or not to recursively decode the string. This format is supported by\nPHP / Ruby on Rails servers and similar.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-getKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-getKey' class='name expandable'>getKey</a>( <span class='pre'>object, value</span> )</div><div class='description'><div class='short'>Returns the first matching key corresponding to the given value. ...</div><div class='long'><p>Returns the first matching key corresponding to the given value.\nIf no matching value is found, <code>null</code> is returned.</p>\n\n<pre><code>var person = {\n    name: 'Jacky',\n    loves: 'food'\n};\n\nalert(<a href=\"#!/api/Carcasse.Object-method-getKey\" rel=\"Carcasse.Object-method-getKey\" class=\"docClass\">Carcasse.Object.getKey</a>(sencha, 'food')); // alerts 'loves'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>The value to find</p>\n</div></li></ul></div></div></div><div id='method-getKeys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-getKeys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-getKeys' class='name expandable'>getKeys</a>( <span class='pre'>object</span> ) : String[]</div><div class='description'><div class='short'>Gets all keys of the given object as an array. ...</div><div class='long'><p>Gets all keys of the given object as an array.</p>\n\n<pre><code>var values = <a href=\"#!/api/Carcasse.Object-method-getKeys\" rel=\"Carcasse.Object-method-getKeys\" class=\"docClass\">Carcasse.Object.getKeys</a>({\n    name: 'Jacky',\n    loves: 'food'\n}); // ['name', 'loves']\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String[]</span><div class='sub-desc'><p>An array of keys from the object.</p>\n</div></li></ul></div></div></div><div id='method-getSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-getSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-getSize' class='name expandable'>getSize</a>( <span class='pre'>object</span> ) : Number</div><div class='description'><div class='short'>Gets the total number of this object's own properties. ...</div><div class='long'><p>Gets the total number of this object's own properties.</p>\n\n<pre><code>var size = <a href=\"#!/api/Carcasse.Object-method-getSize\" rel=\"Carcasse.Object-method-getSize\" class=\"docClass\">Carcasse.Object.getSize</a>({\n    name: 'Jacky',\n    loves: 'food'\n}); // size equals 2\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>size</p>\n</div></li></ul></div></div></div><div id='method-getValues' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-getValues' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-getValues' class='name expandable'>getValues</a>( <span class='pre'>object</span> ) : Array</div><div class='description'><div class='short'>Gets all values of the given object as an array. ...</div><div class='long'><p>Gets all values of the given object as an array.</p>\n\n<pre><code>var values = <a href=\"#!/api/Carcasse.Object-method-getValues\" rel=\"Carcasse.Object-method-getValues\" class=\"docClass\">Carcasse.Object.getValues</a>({\n    name: 'Jacky',\n    loves: 'food'\n}); // ['Jacky', 'food']\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>An array of values from the object.</p>\n</div></li></ul></div></div></div><div id='method-merge' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-merge' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-merge' class='name expandable'>merge</a>( <span class='pre'>source, objs</span> ) : Object</div><div class='description'><div class='short'>Merges any number of objects recursively without referencing them or their children. ...</div><div class='long'><p>Merges any number of objects recursively without referencing them or their children.</p>\n\n<pre><code>var extjs = {\n    companyName: 'Carcass JS',\n    products: ['Carcass JS', 'Carcass GWT', 'Carcass Designer'],\n    isSuperCool: true,\n    office: {\n        size: 2000,\n        location: 'Palo Alto',\n        isFun: true\n    }\n};\n\nvar newStuff = {\n    companyName: 'Sencha Inc.',\n    products: ['Carcass JS', 'Carcass GWT', 'Carcass Designer', 'Sencha Touch', 'Sencha Animator'],\n    office: {\n        size: 40000,\n        location: 'Redwood City'\n    }\n};\n\nvar sencha = <a href=\"#!/api/Carcasse.Object-method-merge\" rel=\"Carcasse.Object-method-merge\" class=\"docClass\">Carcasse.Object.merge</a>({}, extjs, newStuff);\n\n// sencha then equals to\n{\n    companyName: 'Sencha Inc.',\n    products: ['Carcass JS', 'Carcass GWT', 'Carcass Designer', 'Sencha Touch', 'Sencha Animator'],\n    isSuperCool: true\n    office: {\n        size: 40000,\n        location: 'Redwood City'\n        isFun: true\n    }\n}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>The first object into which to merge the others.</p>\n</div></li><li><span class='pre'>objs</span> : Object...<div class='sub-desc'><p>One or more objects to be merged into the first.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The object that is created as a result of merging all the objects passed in.</p>\n</div></li></ul></div></div></div><div id='method-mergeIf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-mergeIf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-mergeIf' class='name expandable'>mergeIf</a>( <span class='pre'>source</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-toQueryObjects' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-toQueryObjects' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-toQueryObjects' class='name expandable'>toQueryObjects</a>( <span class='pre'>name, value, [recursive]</span> ) : Object[]</div><div class='description'><div class='short'>Convert a name - value pair to an array of objects with support for nested structures; useful to construct\nquery stri...</div><div class='long'><p>Convert a <code>name</code> - <code>value</code> pair to an array of objects with support for nested structures; useful to construct\nquery strings. For example:</p>\n\n<p>Non-recursive:</p>\n\n<pre><code>var objects = <a href=\"#!/api/Carcasse.Object-method-toQueryObjects\" rel=\"Carcasse.Object-method-toQueryObjects\" class=\"docClass\">Carcasse.Object.toQueryObjects</a>('hobbies', ['reading', 'cooking', 'swimming']);\n\n// objects then equals:\n[\n    { name: 'hobbies', value: 'reading' },\n    { name: 'hobbies', value: 'cooking' },\n    { name: 'hobbies', value: 'swimming' }\n]\n</code></pre>\n\n<p>Recursive:</p>\n\n<pre><code>var objects = <a href=\"#!/api/Carcasse.Object-method-toQueryObjects\" rel=\"Carcasse.Object-method-toQueryObjects\" class=\"docClass\">Carcasse.Object.toQueryObjects</a>('dateOfBirth', {\n    day: 3,\n    month: 8,\n    year: 1987,\n    extra: {\n        hour: 4,\n        minute: 30\n    }\n}, true);\n\n// objects then equals:\n[\n    { name: 'dateOfBirth[day]', value: 3 },\n    { name: 'dateOfBirth[month]', value: 8 },\n    { name: 'dateOfBirth[year]', value: 1987 },\n    { name: 'dateOfBirth[extra][hour]', value: 4 },\n    { name: 'dateOfBirth[extra][minute]', value: 30 }\n]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>value</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>recursive</span> : Boolean (optional)<div class='sub-desc'><p><code>true</code> to recursively encode any sub-objects.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object[]</span><div class='sub-desc'><p>Array of objects with <code>name</code> and <code>value</code> fields.</p>\n</div></li></ul></div></div></div><div id='method-toQueryString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.Object'>Carcasse.Object</span><br/><a href='source/Object.html#Carcasse-Object-method-toQueryString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.Object-method-toQueryString' class='name expandable'>toQueryString</a>( <span class='pre'>object, [recursive]</span> ) : String</div><div class='description'><div class='short'>Takes an object and converts it to an encoded query string. ...</div><div class='long'><p>Takes an object and converts it to an encoded query string.</p>\n\n<p>Non-recursive:</p>\n\n<pre><code><a href=\"#!/api/Carcasse.Object-method-toQueryString\" rel=\"Carcasse.Object-method-toQueryString\" class=\"docClass\">Carcasse.Object.toQueryString</a>({foo: 1, bar: 2}); // returns \"foo=1&amp;bar=2\"\n<a href=\"#!/api/Carcasse.Object-method-toQueryString\" rel=\"Carcasse.Object-method-toQueryString\" class=\"docClass\">Carcasse.Object.toQueryString</a>({foo: null, bar: 2}); // returns \"foo=&amp;bar=2\"\n<a href=\"#!/api/Carcasse.Object-method-toQueryString\" rel=\"Carcasse.Object-method-toQueryString\" class=\"docClass\">Carcasse.Object.toQueryString</a>({'some price': '$300'}); // returns \"some%20price=%24300\"\n<a href=\"#!/api/Carcasse.Object-method-toQueryString\" rel=\"Carcasse.Object-method-toQueryString\" class=\"docClass\">Carcasse.Object.toQueryString</a>({date: new Date(2011, 0, 1)}); // returns \"date=%222011-01-01T00%3A00%3A00%22\"\n<a href=\"#!/api/Carcasse.Object-method-toQueryString\" rel=\"Carcasse.Object-method-toQueryString\" class=\"docClass\">Carcasse.Object.toQueryString</a>({colors: ['red', 'green', 'blue']}); // returns \"colors=red&amp;colors=green&amp;colors=blue\"\n</code></pre>\n\n<p>Recursive:</p>\n\n<pre><code><a href=\"#!/api/Carcasse.Object-method-toQueryString\" rel=\"Carcasse.Object-method-toQueryString\" class=\"docClass\">Carcasse.Object.toQueryString</a>({\n    username: 'Jacky',\n    dateOfBirth: {\n        day: 1,\n        month: 2,\n        year: 1911\n    },\n    hobbies: ['coding', 'eating', 'sleeping', ['nested', 'stuff']]\n}, true);\n\n// returns the following string (broken down and url-decoded for ease of reading purpose):\n// username=Jacky\n//    &amp;dateOfBirth[day]=1&amp;dateOfBirth[month]=2&amp;dateOfBirth[year]=1911\n//    &amp;hobbies[0]=coding&amp;hobbies[1]=eating&amp;hobbies[2]=sleeping&amp;hobbies[3][0]=nested&amp;hobbies[3][1]=stuff\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>The object to encode.</p>\n</div></li><li><span class='pre'>recursive</span> : Boolean (optional)<div class='sub-desc'><p>Whether or not to interpret the object in recursive format.\n(PHP / Ruby on Rails servers and similar).</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>queryString</p>\n</div></li></ul></div></div></div></div></div></div></div>"});