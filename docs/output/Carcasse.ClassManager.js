Ext.data.JsonP.Carcasse_ClassManager({"tagname":"class","name":"Carcasse.ClassManager","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":true,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"author":["Jacky Nguyen <jacky@sencha.com>"],"aside":[{"type":"guide","name":"class_system"},{"type":"video","name":"class-system"}]},"private":null,"id":"class-Carcasse.ClassManager","members":{"cfg":[],"property":[{"name":"classes","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-classes"},{"name":"createdListeners","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-createdListeners"},{"name":"defaultPostprocessors","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-defaultPostprocessors"},{"name":"enableNamespaceParseCache","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-enableNamespaceParseCache"},{"name":"existCache","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-existCache"},{"name":"instantiators","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-instantiators"},{"name":"maps","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-maps"},{"name":"nameCreatedListeners","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-nameCreatedListeners"},{"name":"namespaceParseCache","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-namespaceParseCache"},{"name":"namespaceRewrites","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-namespaceRewrites"},{"name":"postprocessors","tagname":"property","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"property-postprocessors"}],"method":[{"name":"addNameAliasMappings","tagname":"method","owner":"Carcasse.ClassManager","meta":{"chainable":true},"id":"method-addNameAliasMappings"},{"name":"addNameAlternateMappings","tagname":"method","owner":"Carcasse.ClassManager","meta":{"chainable":true},"id":"method-addNameAlternateMappings"},{"name":"create","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-create"},{"name":"createNamespaces","tagname":"method","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"method-createNamespaces"},{"name":"dynInstantiate","tagname":"method","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"method-dynInstantiate"},{"name":"get","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-get"},{"name":"getAliasesByName","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-getAliasesByName"},{"name":"getByAlias","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-getByAlias"},{"name":"getClass","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-getClass"},{"name":"getInstantiator","tagname":"method","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"method-getInstantiator"},{"name":"getName","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-getName"},{"name":"getNameByAlias","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-getNameByAlias"},{"name":"getNameByAlternate","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-getNameByAlternate"},{"name":"getNamesByExpression","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-getNamesByExpression"},{"name":"instantiate","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-instantiate"},{"name":"instantiateByAlias","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-instantiateByAlias"},{"name":"isCreated","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-isCreated"},{"name":"onCreated","tagname":"method","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"method-onCreated"},{"name":"parseNamespace","tagname":"method","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"method-parseNamespace"},{"name":"registerPostprocessor","tagname":"method","owner":"Carcasse.ClassManager","meta":{"private":true,"chainable":true},"id":"method-registerPostprocessor"},{"name":"set","tagname":"method","owner":"Carcasse.ClassManager","meta":{"chainable":true},"id":"method-set"},{"name":"setAlias","tagname":"method","owner":"Carcasse.ClassManager","meta":{"chainable":true},"id":"method-setAlias"},{"name":"setDefaultPostprocessorPosition","tagname":"method","owner":"Carcasse.ClassManager","meta":{"private":true,"chainable":true},"id":"method-setDefaultPostprocessorPosition"},{"name":"setDefaultPostprocessors","tagname":"method","owner":"Carcasse.ClassManager","meta":{"private":true,"chainable":true},"id":"method-setDefaultPostprocessors"},{"name":"setNamespace","tagname":"method","owner":"Carcasse.ClassManager","meta":{},"id":"method-setNamespace"},{"name":"triggerCreated","tagname":"method","owner":"Carcasse.ClassManager","meta":{"private":true},"id":"method-triggerCreated"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":6,"files":[{"filename":"ClassManager.js","href":"ClassManager.html#Carcasse-ClassManager"}],"html_meta":{"author":null,"aside":[]},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ClassManager.html#Carcasse-ClassManager' target='_blank'>ClassManager.js</a></div></pre><div class='doc-contents'><p><a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a> manages all classes and handles mapping from string class name to\nactual class objects throughout the whole framework. It is not generally accessed directly, rather through\nthese convenient shorthands:</p>\n\n<ul>\n<li><a href=\"#!/api/Carcass-method-define\" rel=\"Carcass-method-define\" class=\"docClass\">Carcasse.define</a></li>\n<li><a href=\"#!/api/Carcasse.ClassManager-method-create\" rel=\"Carcasse.ClassManager-method-create\" class=\"docClass\">Carcasse.create</a></li>\n<li><a href=\"#!/api/Carcass-method-widget\" rel=\"Carcass-method-widget\" class=\"docClass\">Carcasse.widget</a></li>\n<li><a href=\"#!/api/Carcass-method-getClass\" rel=\"Carcass-method-getClass\" class=\"docClass\">Carcasse.getClass</a></li>\n<li><a href=\"#!/api/Carcass-method-getClassName\" rel=\"Carcass-method-getClassName\" class=\"docClass\">Carcasse.getClassName</a></li>\n</ul>\n\n\n<h2>Basic syntax:</h2>\n\n<pre><code>Carcasse.define(className, properties);\n</code></pre>\n\n<p>in which <code>properties</code> is an object represent a collection of properties that apply to the class. See\n<a href=\"#!/api/Carcasse.ClassManager-method-create\" rel=\"Carcasse.ClassManager-method-create\" class=\"docClass\">create</a> for more detailed instructions.</p>\n\n<pre class='inline-example '><code>Carcasse.define('Person', {\n     name: 'Unknown',\n\n     constructor: function(name) {\n         if (name) {\n             this.name = name;\n         }\n\n         return this;\n     },\n\n     eat: function(foodType) {\n         alert(\"I'm eating: \" + foodType);\n\n         return this;\n     }\n});\n\nvar aaron = new Person(\"Aaron\");\naaron.eat(\"Sandwich\"); // alert(\"I'm eating: Sandwich\");\n</code></pre>\n\n<p><a href=\"#!/api/Carcasse.Class\" rel=\"Carcasse.Class\" class=\"docClass\">Carcasse.Class</a> has a powerful set of extensible <a href=\"#!/api/Carcasse.Class-static-method-registerPreprocessor\" rel=\"Carcasse.Class-static-method-registerPreprocessor\" class=\"docClass\">pre-processors</a> which takes care of\neverything related to class creation, including but not limited to inheritance, mixins, configuration, statics, etc.</p>\n\n<h2>Inheritance:</h2>\n\n<pre><code>Carcasse.define('Developer', {\n     extend: 'Person',\n\n     constructor: function(name, isGeek) {\n         this.isGeek = isGeek;\n\n         // Apply a method from the parent class' prototype\n         this.callParent([name]);\n\n         return this;\n\n     },\n\n     code: function(language) {\n         alert(\"I'm coding in: \" + language);\n\n         this.eat(\"Bugs\");\n\n         return this;\n     }\n});\n\nvar jacky = new Developer(\"Jacky\", true);\njacky.code(\"JavaScript\"); // alert(\"I'm coding in: JavaScript\");\n                          // alert(\"I'm eating: Bugs\");\n</code></pre>\n\n<p>See <a href=\"#!/api/Carcasse.Base-method-callParent\" rel=\"Carcasse.Base-method-callParent\" class=\"docClass\">Carcasse.Base.callParent</a> for more details on calling superclass' methods</p>\n\n<h2>Mixins:</h2>\n\n<pre><code>Carcasse.define('CanPlayGuitar', {\n     playGuitar: function() {\n        alert(\"F#...G...D...A\");\n     }\n});\n\nCarcasse.define('CanComposeSongs', {\n     composeSongs: function() { }\n});\n\nCarcasse.define('CanSing', {\n     sing: function() {\n         alert(\"I'm on the highway to hell...\");\n     }\n});\n\nCarcasse.define('Musician', {\n     extend: 'Person',\n\n     mixins: {\n         canPlayGuitar: 'CanPlayGuitar',\n         canComposeSongs: 'CanComposeSongs',\n         canSing: 'CanSing'\n     }\n});\n\nCarcasse.define('CoolPerson', {\n     extend: 'Person',\n\n     mixins: {\n         canPlayGuitar: 'CanPlayGuitar',\n         canSing: 'CanSing'\n     },\n\n     sing: function() {\n         alert(\"Ahem...\");\n\n         this.mixins.canSing.sing.call(this);\n\n         alert(\"[Playing guitar at the same time...]\");\n\n         this.playGuitar();\n     }\n});\n\nvar me = new CoolPerson(\"Jacky\");\n\nme.sing(); // alert(\"Ahem...\");\n           // alert(\"I'm on the highway to hell...\");\n           // alert(\"[Playing guitar at the same time...]\");\n           // alert(\"F#...G...D...A\");\n</code></pre>\n\n<h2>Config:</h2>\n\n<pre><code>Carcasse.define('SmartPhone', {\n     config: {\n         hasTouchScreen: false,\n         operatingSystem: 'Other',\n         price: 500\n     },\n\n     isExpensive: false,\n\n     constructor: function(config) {\n         this.initConfig(config);\n\n         return this;\n     },\n\n     applyPrice: function(price) {\n         this.isExpensive = (price &gt; 500);\n\n         return price;\n     },\n\n     applyOperatingSystem: function(operatingSystem) {\n         if (!(/^(iOS|Android|BlackBerry)$/i).test(operatingSystem)) {\n             return 'Other';\n         }\n\n         return operatingSystem;\n     }\n});\n\nvar iPhone = new SmartPhone({\n     hasTouchScreen: true,\n     operatingSystem: 'iOS'\n});\n\niPhone.getPrice(); // 500;\niPhone.getOperatingSystem(); // 'iOS'\niPhone.getHasTouchScreen(); // true;\n\niPhone.isExpensive; // false;\niPhone.setPrice(600);\niPhone.getPrice(); // 600\niPhone.isExpensive; // true;\n\niPhone.setOperatingSystem('AlienOS');\niPhone.getOperatingSystem(); // 'Other'\n</code></pre>\n\n<h2>Statics:</h2>\n\n<pre><code>Carcasse.define('Computer', {\n     statics: {\n         factory: function(brand) {\n            // 'this' in static methods refer to the class itself\n             return new this(brand);\n         }\n     },\n\n     constructor: function() { }\n});\n\nvar dellComputer = Computer.factory('Dell');\n</code></pre>\n\n<p>Also see <a href=\"#!/api/Carcasse.Base-method-statics\" rel=\"Carcasse.Base-method-statics\" class=\"docClass\">Carcasse.Base.statics</a> and <a href=\"#!/api/Carcasse.Base-property-self\" rel=\"Carcasse.Base-property-self\" class=\"docClass\">Carcasse.Base.self</a> for more details on accessing\nstatic properties within class methods</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-classes' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-classes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-classes' class='name expandable'>classes</a><span> : Object</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'>All classes which were defined through the ClassManager. ...</div><div class='long'><p>All classes which were defined through the ClassManager. Keys are the\nname of the classes and the values are references to the classes.</p>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-createdListeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-createdListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-createdListeners' class='name expandable'>createdListeners</a><span> : Array</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-defaultPostprocessors' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-defaultPostprocessors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-defaultPostprocessors' class='name expandable'>defaultPostprocessors</a><span> : Array</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-enableNamespaceParseCache' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-enableNamespaceParseCache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-enableNamespaceParseCache' class='name expandable'>enableNamespaceParseCache</a><span> : Boolean</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-existCache' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-existCache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-existCache' class='name expandable'>existCache</a><span> : Object</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-instantiators' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-instantiators' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-instantiators' class='name expandable'>instantiators</a><span> : Array</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-maps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-maps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-maps' class='name expandable'>maps</a><span> : Object</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{alternateToName: {}, aliasToName: {}, nameToAliases: {}, nameToAlternates: {}}</code></p></div></div></div><div id='property-nameCreatedListeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-nameCreatedListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-nameCreatedListeners' class='name expandable'>nameCreatedListeners</a><span> : Object</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-namespaceParseCache' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-namespaceParseCache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-namespaceParseCache' class='name expandable'>namespaceParseCache</a><span> : Object</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-namespaceRewrites' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-namespaceRewrites' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-namespaceRewrites' class='name not-expandable'>namespaceRewrites</a><span> : Object</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-postprocessors' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-property-postprocessors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-property-postprocessors' class='name expandable'>postprocessors</a><span> : Object</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addNameAliasMappings' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-addNameAliasMappings' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-addNameAliasMappings' class='name expandable'>addNameAliasMappings</a>( <span class='pre'>aliases</span> ) : <a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Adds a batch of class name to alias mappings ...</div><div class='long'><p>Adds a batch of class name to alias mappings</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>aliases</span> : Object<div class='sub-desc'><p>The set of mappings of the form\nclassName : [values...]</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-addNameAlternateMappings' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-addNameAlternateMappings' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-addNameAlternateMappings' class='name expandable'>addNameAlternateMappings</a>( <span class='pre'>alternates</span> ) : <a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alternates</span> : Object<div class='sub-desc'><p>The set of mappings of the form\nclassName : [values...]</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-create' class='name expandable'>create</a>( <span class='pre'>name, args</span> ) : Object</div><div class='description'><div class='short'>Instantiate a class by either full name, alias or alternate name. ...</div><div class='long'><p>Instantiate a class by either full name, alias or alternate name.</p>\n\n<p>If <a href=\"#!/api/Carcasse.Loader\" rel=\"Carcasse.Loader\" class=\"docClass\">Carcasse.Loader</a> is <a href=\"#!/api/Carcasse.Loader-method-setConfig\" rel=\"Carcasse.Loader-method-setConfig\" class=\"docClass\">enabled</a> and the class has not been defined yet, it will\nattempt to load the class via synchronous loading.</p>\n\n<p>For example, all these three lines return the same result:</p>\n\n<pre><code>// alias\nvar formPanel = Carcasse.create('widget.formpanel', { width: 600, height: 800 });\n\n// alternate name\nvar formPanel = Carcasse.create('Carcasse.form.FormPanel', { width: 600, height: 800 });\n\n// full class name\nvar formPanel = Carcasse.create('Carcasse.form.Panel', { width: 600, height: 800 });\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>args</span> : Mixed<div class='sub-desc'><p>Additional arguments after the name will be passed to the class' constructor.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>instance</p>\n</div></li></ul></div></div></div><div id='method-createNamespaces' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-createNamespaces' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-createNamespaces' class='name expandable'>createNamespaces</a>( <span class='pre'></span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'>The new Carcasse.ns, supports namespace rewriting. ...</div><div class='long'><p>The new Carcasse.ns, supports namespace rewriting.</p>\n</div></div></div><div id='method-dynInstantiate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-dynInstantiate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-dynInstantiate' class='name expandable'>dynInstantiate</a>( <span class='pre'>name, args</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>args</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-get' class='name expandable'>get</a>( <span class='pre'>name</span> ) : <a href=\"#!/api/Carcasse.Class\" rel=\"Carcasse.Class\" class=\"docClass\">Carcasse.Class</a></div><div class='description'><div class='short'>Retrieve a class by its name. ...</div><div class='long'><p>Retrieve a class by its name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Carcasse.Class\" rel=\"Carcasse.Class\" class=\"docClass\">Carcasse.Class</a></span><div class='sub-desc'><p>class</p>\n</div></li></ul></div></div></div><div id='method-getAliasesByName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-getAliasesByName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-getAliasesByName' class='name expandable'>getAliasesByName</a>( <span class='pre'>name</span> ) : Array</div><div class='description'><div class='short'>Get the aliases of a class by the class name ...</div><div class='long'><p>Get the aliases of a class by the class name</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>aliases</p>\n</div></li></ul></div></div></div><div id='method-getByAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-getByAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-getByAlias' class='name expandable'>getByAlias</a>( <span class='pre'>alias</span> ) : <a href=\"#!/api/Carcasse.Class\" rel=\"Carcasse.Class\" class=\"docClass\">Carcasse.Class</a></div><div class='description'><div class='short'>Get a reference to the class by its alias. ...</div><div class='long'><p>Get a reference to the class by its alias.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Carcasse.Class\" rel=\"Carcasse.Class\" class=\"docClass\">Carcasse.Class</a></span><div class='sub-desc'><p>class</p>\n</div></li></ul></div></div></div><div id='method-getClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-getClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-getClass' class='name expandable'>getClass</a>( <span class='pre'>object</span> ) : <a href=\"#!/api/Carcasse.Class\" rel=\"Carcasse.Class\" class=\"docClass\">Carcasse.Class</a></div><div class='description'><div class='short'>Get the class of the provided object; returns null if it's not an instance\nof any class created with Carcasse.define. ...</div><div class='long'><p>Get the class of the provided object; returns null if it's not an instance\nof any class created with Carcasse.define. This is usually invoked by the shorthand <a href=\"#!/api/Carcass-method-getClass\" rel=\"Carcass-method-getClass\" class=\"docClass\">Carcasse.getClass</a>.</p>\n\n<pre><code>var component = new Carcasse.Component();\n\n<a href=\"#!/api/Carcasse.ClassManager-method-getClass\" rel=\"Carcasse.ClassManager-method-getClass\" class=\"docClass\">Carcasse.ClassManager.getClass</a>(component); // returns Carcasse.Component\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Carcasse.Class\" rel=\"Carcasse.Class\" class=\"docClass\">Carcasse.Class</a></span><div class='sub-desc'><p>class</p>\n</div></li></ul></div></div></div><div id='method-getInstantiator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-getInstantiator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-getInstantiator' class='name expandable'>getInstantiator</a>( <span class='pre'>length</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>length</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-getName' class='name expandable'>getName</a>( <span class='pre'>object</span> ) : String</div><div class='description'><div class='short'>Get the name of the class by its reference or its instance;\nusually invoked by the shorthand Carcasse.getClassName\n\nC...</div><div class='long'><p>Get the name of the class by its reference or its instance;\nusually invoked by the shorthand <a href=\"#!/api/Carcass-method-getClassName\" rel=\"Carcass-method-getClassName\" class=\"docClass\">Carcasse.getClassName</a></p>\n\n<pre><code><a href=\"#!/api/Carcasse.ClassManager-method-getName\" rel=\"Carcasse.ClassManager-method-getName\" class=\"docClass\">Carcasse.ClassManager.getName</a>(Carcasse.Action); // returns \"Carcasse.Action\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <a href=\"#!/api/Carcasse.Class\" rel=\"Carcasse.Class\" class=\"docClass\">Carcasse.Class</a>/Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>className</p>\n\n</div></li></ul></div></div></div><div id='method-getNameByAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-getNameByAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-getNameByAlias' class='name expandable'>getNameByAlias</a>( <span class='pre'>alias</span> ) : String</div><div class='description'><div class='short'>Get the name of a class by its alias. ...</div><div class='long'><p>Get the name of a class by its alias.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>className</p>\n</div></li></ul></div></div></div><div id='method-getNameByAlternate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-getNameByAlternate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-getNameByAlternate' class='name expandable'>getNameByAlternate</a>( <span class='pre'>alternate</span> ) : String</div><div class='description'><div class='short'>Get the name of a class by its alternate name. ...</div><div class='long'><p>Get the name of a class by its alternate name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alternate</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>className</p>\n</div></li></ul></div></div></div><div id='method-getNamesByExpression' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-getNamesByExpression' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-getNamesByExpression' class='name expandable'>getNamesByExpression</a>( <span class='pre'>expression</span> ) : Array</div><div class='description'><div class='short'>Converts a string expression to an array of matching class names. ...</div><div class='long'><p>Converts a string expression to an array of matching class names. An expression can either refers to class aliases\nor class names. Expressions support wildcards:</p>\n\n<pre><code> // returns ['Carcasse.window.Window']\nvar window = <a href=\"#!/api/Carcasse.ClassManager-method-getNamesByExpression\" rel=\"Carcasse.ClassManager-method-getNamesByExpression\" class=\"docClass\">Carcasse.ClassManager.getNamesByExpression</a>('widget.window');\n\n// returns ['widget.panel', 'widget.window', ...]\nvar allWidgets = <a href=\"#!/api/Carcasse.ClassManager-method-getNamesByExpression\" rel=\"Carcasse.ClassManager-method-getNamesByExpression\" class=\"docClass\">Carcasse.ClassManager.getNamesByExpression</a>('widget.*');\n\n// returns ['Carcasse.data.Store', 'Carcasse.data.ArrayProxy', ...]\nvar allData = <a href=\"#!/api/Carcasse.ClassManager-method-getNamesByExpression\" rel=\"Carcasse.ClassManager-method-getNamesByExpression\" class=\"docClass\">Carcasse.ClassManager.getNamesByExpression</a>('Carcasse.data.*');\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>expression</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p>classNames</p>\n</div></li></ul></div></div></div><div id='method-instantiate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-instantiate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-instantiate' class='name expandable'>instantiate</a>( <span class='pre'>name, args</span> ) : Object</div><div class='description'><div class='short'>Instantiate a class by either full name, alias or alternate name; usually invoked by the convenient\nshorthand Carcass...</div><div class='long'><p>Instantiate a class by either full name, alias or alternate name; usually invoked by the convenient\nshorthand <a href=\"#!/api/Carcasse.ClassManager-method-create\" rel=\"Carcasse.ClassManager-method-create\" class=\"docClass\">Carcasse.create</a>.</p>\n\n<p>If <a href=\"#!/api/Carcasse.Loader\" rel=\"Carcasse.Loader\" class=\"docClass\">Carcasse.Loader</a> is <a href=\"#!/api/Carcasse.Loader-method-setConfig\" rel=\"Carcasse.Loader-method-setConfig\" class=\"docClass\">enabled</a> and the class has not been defined yet, it will\nattempt to load the class via synchronous loading.</p>\n\n<p>For example, all these three lines return the same result:</p>\n\n<pre><code>// alias\nvar formPanel = Carcasse.create('widget.formpanel', { width: 600, height: 800 });\n\n// alternate name\nvar formPanel = Carcasse.create('Carcasse.form.FormPanel', { width: 600, height: 800 });\n\n// full class name\nvar formPanel = Carcasse.create('Carcasse.form.Panel', { width: 600, height: 800 });\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>args</span> : Mixed<div class='sub-desc'><p>Additional arguments after the name will be passed to the class' constructor.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>instance</p>\n</div></li></ul></div></div></div><div id='method-instantiateByAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-instantiateByAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-instantiateByAlias' class='name expandable'>instantiateByAlias</a>( <span class='pre'>alias, args</span> ) : Object</div><div class='description'><div class='short'>Instantiate a class by its alias; usually invoked by the convenient shorthand Carcasse.createByAlias\nIf Carcasse.Load...</div><div class='long'><p>Instantiate a class by its alias; usually invoked by the convenient shorthand <a href=\"#!/api/Carcass-method-createByAlias\" rel=\"Carcass-method-createByAlias\" class=\"docClass\">Carcasse.createByAlias</a>\nIf <a href=\"#!/api/Carcasse.Loader\" rel=\"Carcasse.Loader\" class=\"docClass\">Carcasse.Loader</a> is <a href=\"#!/api/Carcasse.Loader-method-setConfig\" rel=\"Carcasse.Loader-method-setConfig\" class=\"docClass\">enabled</a> and the class has not been defined yet, it will\nattempt to load the class via synchronous loading.</p>\n\n<pre><code>var window = <a href=\"#!/api/Carcasse.ClassManager-method-instantiateByAlias\" rel=\"Carcasse.ClassManager-method-instantiateByAlias\" class=\"docClass\">Carcasse.ClassManager.instantiateByAlias</a>('widget.window', { width: 600, height: 800 });\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>args</span> : Mixed...<div class='sub-desc'><p>Additional arguments after the alias will be passed to the class constructor.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>instance</p>\n</div></li></ul></div></div></div><div id='method-isCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-isCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-isCreated' class='name expandable'>isCreated</a>( <span class='pre'>className</span> ) : Boolean</div><div class='description'><div class='short'>Checks if a class has already been created. ...</div><div class='long'><p>Checks if a class has already been created.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>exist</p>\n</div></li></ul></div></div></div><div id='method-onCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-onCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-onCreated' class='name expandable'>onCreated</a>( <span class='pre'>fn, scope, className</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>className</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-parseNamespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-parseNamespace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-parseNamespace' class='name expandable'>parseNamespace</a>( <span class='pre'>namespace</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'>Supports namespace rewriting. ...</div><div class='long'><p>Supports namespace rewriting.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>namespace</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-registerPostprocessor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-registerPostprocessor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-registerPostprocessor' class='name expandable'>registerPostprocessor</a>( <span class='pre'>name, postprocessor</span> ) : <a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a><strong class='chainable signature' >chainable</strong><strong class='private signature' >private</strong></div><div class='description'><div class='short'>Register a post-processor function. ...</div><div class='long'><p>Register a post-processor function.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>postprocessor</span> : Function<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-set' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-set' class='name expandable'>set</a>( <span class='pre'>name, value</span> ) : <a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Sets a name reference to a class. ...</div><div class='long'><p>Sets a name reference to a class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>value</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-setAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-setAlias' class='name expandable'>setAlias</a>( <span class='pre'>cls, alias</span> ) : <a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Register the alias for a class. ...</div><div class='long'><p>Register the alias for a class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : <a href=\"#!/api/Carcasse.Class\" rel=\"Carcasse.Class\" class=\"docClass\">Carcasse.Class</a>/String<div class='sub-desc'><p>a reference to a class or a <code>className</code>.</p>\n</div></li><li><span class='pre'>alias</span> : String<div class='sub-desc'><p>Alias to use when referring to this class.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setDefaultPostprocessorPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-setDefaultPostprocessorPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-setDefaultPostprocessorPosition' class='name expandable'>setDefaultPostprocessorPosition</a>( <span class='pre'>name, offset, relativeName</span> ) : <a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a><strong class='chainable signature' >chainable</strong><strong class='private signature' >private</strong></div><div class='description'><div class='short'>Insert this post-processor at a specific position in the stack, optionally relative to\nany existing post-processor ...</div><div class='long'><p>Insert this post-processor at a specific position in the stack, optionally relative to\nany existing post-processor</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The post-processor name. Note that it needs to be registered with\n<a href=\"#!/api/Carcasse.ClassManager-method-registerPostprocessor\" rel=\"Carcasse.ClassManager-method-registerPostprocessor\" class=\"docClass\">registerPostprocessor</a> before this</p>\n</div></li><li><span class='pre'>offset</span> : String<div class='sub-desc'><p>The insertion position. Four possible values are:\n'first', 'last', or: 'before', 'after' (relative to the name provided in the third argument)</p>\n</div></li><li><span class='pre'>relativeName</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setDefaultPostprocessors' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-setDefaultPostprocessors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-setDefaultPostprocessors' class='name expandable'>setDefaultPostprocessors</a>( <span class='pre'>The</span> ) : <a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a><strong class='chainable signature' >chainable</strong><strong class='private signature' >private</strong></div><div class='description'><div class='short'>Set the default post processors array stack which are applied to every class. ...</div><div class='long'><p>Set the default post processors array stack which are applied to every class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>The</span> : String/Array<div class='sub-desc'><p>name of a registered post processor or an array of registered names.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Carcasse.ClassManager\" rel=\"Carcasse.ClassManager\" class=\"docClass\">Carcasse.ClassManager</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setNamespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-setNamespace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-setNamespace' class='name expandable'>setNamespace</a>( <span class='pre'>name, value</span> )</div><div class='description'><div class='short'>Creates a namespace and assign the value to the created object. ...</div><div class='long'><p>Creates a namespace and assign the <code>value</code> to the created object.</p>\n\n<pre><code><a href=\"#!/api/Carcasse.ClassManager-method-setNamespace\" rel=\"Carcasse.ClassManager-method-setNamespace\" class=\"docClass\">Carcasse.ClassManager.setNamespace</a>('MyCompany.pkg.Example', someObject);\nalert(MyCompany.pkg.Example === someObject); // alerts true\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>value</span> : Mixed<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-triggerCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Carcasse.ClassManager'>Carcasse.ClassManager</span><br/><a href='source/ClassManager.html#Carcasse-ClassManager-method-triggerCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Carcasse.ClassManager-method-triggerCreated' class='name expandable'>triggerCreated</a>( <span class='pre'>className</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});